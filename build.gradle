// create a runnable jar with jar dependencies stored in lib subdirectory
tasks.whenTaskAdded { task ->
    ['startScripts', 'distTar'].each { String skipTaskName ->
        if (task.name.contains(skipTaskName)) {
            task.enabled = false
        }
    }
}
apply plugin: 'java'
apply plugin: 'application'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = 'edu.mcw.scge.Manager'
String myAppName = 'scgeLoadPipeline'

repositories {
    mavenCentral()
    maven {
        url 'https://packages.atlassian.com/maven-3rdparty'
    }
}

dependencies {
    compile 'commons-dbcp:commons-dbcp:1.4'
    compile 'org.apache.commons:commons-lang3:3.12.0'
    compile 'org.apache.logging.log4j:log4j-api:2.18.0'
    compile 'org.apache.logging.log4j:log4j-core:2.18.0'
    compile 'org.apache.poi:poi:3.17'
    compile 'org.apache.poi:poi-ooxml:3.17'
    compile 'org.apache.poi:poi-ooxml-schemas:3.17'
    compile 'org.postgresql:postgresql:9.2-1004-jdbc4'
    compile 'org.springframework:spring-beans:5.2.9.RELEASE'
    compile 'org.springframework:spring-jdbc:5.2.9.RELEASE'
    compile 'org.apache.xmlbeans:xmlbeans:3.1.0'

    compile fileTree(dir: 'lib', include: '*.jar')
}

jar {
    baseName = myAppName
    manifest {
        attributes(
            'Built-By': System.getProperty('user.name'),
            'Built-Date': new Date(),
            'Built-JDK': System.getProperty('java.version'),
            'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
            'Main-Class': mainClassName
        )
    }
}

distributions {
    main {
        baseName = myAppName
    }
}

task createDistro(type: Copy) {
    def zipFile = file('build/distributions/'+myAppName+'.zip')
    def outputDir = file("build/install")

    from zipTree(zipFile)
    into outputDir
}
createDistro.dependsOn assembleDist
